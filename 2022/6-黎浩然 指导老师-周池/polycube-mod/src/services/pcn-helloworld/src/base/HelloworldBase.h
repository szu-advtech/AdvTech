/**
* helloworld API generated from helloworld.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* HelloworldBase.h
*
*
*/

#pragma once

#include "../serializer/HelloworldJsonObject.h"

#include "../Ports.h"

#include "polycube/services/cube.h"
#include "polycube/services/port.h"
#include "polycube/services/utils.h"
#include "polycube/services/fifo_map.hpp"

#include <spdlog/spdlog.h>

using namespace polycube::service::model;


class HelloworldBase: public virtual polycube::service::Cube<Ports> {
 public:
  HelloworldBase(const std::string name);

  virtual ~HelloworldBase();
  virtual void update(const HelloworldJsonObject &conf);
  virtual HelloworldJsonObject toJsonObject();

  /// <summary>
  /// Entry of the ports table
  /// </summary>
  virtual std::shared_ptr<Ports> getPorts(const std::string &name);
  virtual std::vector<std::shared_ptr<Ports>> getPortsList();
  virtual void addPorts(const std::string &name, const PortsJsonObject &conf);
  virtual void addPortsList(const std::vector<PortsJsonObject> &conf);
  virtual void replacePorts(const std::string &name, const PortsJsonObject &conf);
  virtual void delPorts(const std::string &name);
  virtual void delPortsList();

  /// <summary>
  /// Action performed on the received packet (i.e., DROP, SLOWPATH, or FORWARD; default: DROP)
  /// </summary>
  virtual HelloworldActionEnum getAction() = 0;
  virtual void setAction(const HelloworldActionEnum &value) = 0;
};
