/**
 * bridge API generated from bridge.yang
 *
 * NOTE: This file is auto generated by polycube-codegen
 * https://github.com/polycube-network/polycube-codegen
 */

/* Do not edit this file manually */

/*
 * FdbEntryBase.h
 *
 *
 */

#pragma once

#include "../serializer/FdbEntryJsonObject.h"

#include <spdlog/spdlog.h>

using namespace polycube::service::model;

class Fdb;

class FdbEntryBase {
 public:
  FdbEntryBase(Fdb &parent);

  virtual ~FdbEntryBase();
  virtual void update(const FdbEntryJsonObject &conf);
  virtual FdbEntryJsonObject toJsonObject();

  /// <summary>
  /// VLAN identifier
  /// </summary>
  virtual uint16_t getVlan() = 0;

  /// <summary>
  /// MAC address of the filtering database entry
  /// </summary>
  virtual std::string getMac() = 0;

  /// <summary>
  /// Type of filtering entry
  /// </summary>
  virtual FdbEntryTypeEnum getType() = 0;

  /// <summary>
  /// Output port name
  /// </summary>
  virtual std::string getPort() = 0;
  virtual void setPort(const std::string &value) = 0;

  /// <summary>
  /// Age of the current filtering database entry
  /// </summary>
  virtual uint32_t getAge() = 0;

  std::shared_ptr<spdlog::logger> logger();

 protected:
  Fdb &parent_;
};
