/**
* bridge API generated from bridge.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* StpJsonObject.h
*
*
*/

#pragma once


#include "JsonObjectBase.h"


namespace polycube {
namespace service {
namespace model {


/// <summary>
///
/// </summary>
class  StpJsonObject : public JsonObjectBase {
public:
  StpJsonObject();
  StpJsonObject(const nlohmann::json &json);
  ~StpJsonObject() final = default;
  nlohmann::json toJson() const final;


  /// <summary>
  /// VLAN identifier for this entry
  /// </summary>
  uint16_t getVlan() const;
  void setVlan(uint16_t value);
  bool vlanIsSet() const;

  /// <summary>
  /// Bridge priority for STP
  /// </summary>
  uint16_t getPriority() const;
  void setPriority(uint16_t value);
  bool priorityIsSet() const;
  void unsetPriority();

  /// <summary>
  /// Delay used by STP bridges for port state transition
  /// </summary>
  uint32_t getForwardDelay() const;
  void setForwardDelay(uint32_t value);
  bool forwardDelayIsSet() const;
  void unsetForwardDelay();

  /// <summary>
  /// Interval between transmissions of BPDU messages
  /// </summary>
  uint32_t getHelloTime() const;
  void setHelloTime(uint32_t value);
  bool helloTimeIsSet() const;
  void unsetHelloTime();

  /// <summary>
  /// Maximum age of a BPDU
  /// </summary>
  uint32_t getMaxMessageAge() const;
  void setMaxMessageAge(uint32_t value);
  bool maxMessageAgeIsSet() const;
  void unsetMaxMessageAge();

private:
  uint16_t m_vlan;
  bool m_vlanIsSet;
  uint16_t m_priority;
  bool m_priorityIsSet;
  uint32_t m_forwardDelay;
  bool m_forwardDelayIsSet;
  uint32_t m_helloTime;
  bool m_helloTimeIsSet;
  uint32_t m_maxMessageAge;
  bool m_maxMessageAgeIsSet;
};

}
}
}

