/**
* bridge API generated from bridge.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */



#include "PortsTrunkJsonObject.h"
#include <regex>

namespace polycube {
namespace service {
namespace model {

PortsTrunkJsonObject::PortsTrunkJsonObject() {
  m_allowedIsSet = false;
  m_nativeVlanEnabled = true;
  m_nativeVlanEnabledIsSet = true;
  m_nativeVlanIsSet = false;
}

PortsTrunkJsonObject::PortsTrunkJsonObject(const nlohmann::json &val) :
  JsonObjectBase(val) {
  m_allowedIsSet = false;
  m_nativeVlanEnabledIsSet = false;
  m_nativeVlanIsSet = false;


  if (val.count("allowed")) {
    for (auto& item : val["allowed"]) {
      PortsTrunkAllowedJsonObject newItem{ item };
      m_allowed.push_back(newItem);
    }

    m_allowedIsSet = true;
  }

  if (val.count("native-vlan-enabled")) {
    setNativeVlanEnabled(val.at("native-vlan-enabled").get<bool>());
  }

  if (val.count("native-vlan")) {
    setNativeVlan(val.at("native-vlan").get<uint16_t>());
  }
}

nlohmann::json PortsTrunkJsonObject::toJson() const {
  nlohmann::json val = nlohmann::json::object();
  if (!getBase().is_null()) {
    val.update(getBase());
  }

  {
    nlohmann::json jsonArray;
    for (auto& item : m_allowed) {
      jsonArray.push_back(JsonObjectBase::toJson(item));
    }

    if (jsonArray.size() > 0) {
      val["allowed"] = jsonArray;
    }
  }

  if (m_nativeVlanEnabledIsSet) {
    val["native-vlan-enabled"] = m_nativeVlanEnabled;
  }

  if (m_nativeVlanIsSet) {
    val["native-vlan"] = m_nativeVlan;
  }

  return val;
}

const std::vector<PortsTrunkAllowedJsonObject>& PortsTrunkJsonObject::getAllowed() const{
  return m_allowed;
}

void PortsTrunkJsonObject::addPortsTrunkAllowed(PortsTrunkAllowedJsonObject value) {
  m_allowed.push_back(value);
  m_allowedIsSet = true;
}


bool PortsTrunkJsonObject::allowedIsSet() const {
  return m_allowedIsSet;
}

void PortsTrunkJsonObject::unsetAllowed() {
  m_allowedIsSet = false;
}

bool PortsTrunkJsonObject::getNativeVlanEnabled() const {
  return m_nativeVlanEnabled;
}

void PortsTrunkJsonObject::setNativeVlanEnabled(bool value) {
  m_nativeVlanEnabled = value;
  m_nativeVlanEnabledIsSet = true;
}

bool PortsTrunkJsonObject::nativeVlanEnabledIsSet() const {
  return m_nativeVlanEnabledIsSet;
}

void PortsTrunkJsonObject::unsetNativeVlanEnabled() {
  m_nativeVlanEnabledIsSet = false;
}

uint16_t PortsTrunkJsonObject::getNativeVlan() const {
  return m_nativeVlan;
}

void PortsTrunkJsonObject::setNativeVlan(uint16_t value) {
  m_nativeVlan = value;
  m_nativeVlanIsSet = true;
}

bool PortsTrunkJsonObject::nativeVlanIsSet() const {
  return m_nativeVlanIsSet;
}

void PortsTrunkJsonObject::unsetNativeVlan() {
  m_nativeVlanIsSet = false;
}


}
}
}

