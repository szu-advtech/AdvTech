/**
* bridge API generated from bridge.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* PortsTrunkJsonObject.h
*
*
*/

#pragma once


#include "JsonObjectBase.h"

#include "PortsTrunkAllowedJsonObject.h"
#include <vector>

namespace polycube {
namespace service {
namespace model {


/// <summary>
///
/// </summary>
class  PortsTrunkJsonObject : public JsonObjectBase {
public:
  PortsTrunkJsonObject();
  PortsTrunkJsonObject(const nlohmann::json &json);
  ~PortsTrunkJsonObject() final = default;
  nlohmann::json toJson() const final;


  /// <summary>
  /// Allowed vlans
  /// </summary>
  const std::vector<PortsTrunkAllowedJsonObject>& getAllowed() const;
  void addPortsTrunkAllowed(PortsTrunkAllowedJsonObject value);
  bool allowedIsSet() const;
  void unsetAllowed();

  /// <summary>
  /// Enable/Disable the native vlan feature in this trunk port
  /// </summary>
  bool getNativeVlanEnabled() const;
  void setNativeVlanEnabled(bool value);
  bool nativeVlanEnabledIsSet() const;
  void unsetNativeVlanEnabled();

  /// <summary>
  /// VLAN that is not tagged in this trunk port
  /// </summary>
  uint16_t getNativeVlan() const;
  void setNativeVlan(uint16_t value);
  bool nativeVlanIsSet() const;
  void unsetNativeVlan();

private:
  std::vector<PortsTrunkAllowedJsonObject> m_allowed;
  bool m_allowedIsSet;
  bool m_nativeVlanEnabled;
  bool m_nativeVlanEnabledIsSet;
  uint16_t m_nativeVlan;
  bool m_nativeVlanIsSet;
};

}
}
}

