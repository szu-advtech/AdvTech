/**
* k8sdispatcher API generated from k8sdispatcher.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */


#include "SessionRuleBase.h"
#include "../K8sdispatcher.h"


SessionRuleBase::SessionRuleBase(K8sdispatcher &parent)
    : parent_(parent) {}

SessionRuleBase::~SessionRuleBase() {}

void SessionRuleBase::update(const SessionRuleJsonObject &conf) {

}

SessionRuleJsonObject SessionRuleBase::toJsonObject() {
  SessionRuleJsonObject conf;

  conf.setDirection(getDirection());
  conf.setSrcIp(getSrcIp());
  conf.setDstIp(getDstIp());
  conf.setSrcPort(getSrcPort());
  conf.setDstPort(getDstPort());
  conf.setProto(getProto());
  conf.setNewIp(getNewIp());
  conf.setNewPort(getNewPort());
  conf.setOperation(getOperation());
  conf.setOriginatingRule(getOriginatingRule());

  return conf;
}

std::shared_ptr<spdlog::logger> SessionRuleBase::logger() {
  return parent_.logger();
}

