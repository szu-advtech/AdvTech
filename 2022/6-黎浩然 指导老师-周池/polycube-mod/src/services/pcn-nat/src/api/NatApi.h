/**
* nat API
* nat API generated from nat.yang
*
* OpenAPI spec version: 1.0.0
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/polycube-network/swagger-codegen.git
* branch polycube
*/


/* Do not edit this file manually */

/*
* NatApi.h
*
*/

#pragma once

#define POLYCUBE_SERVICE_NAME "nat"


#include "polycube/services/response.h"
#include "polycube/services/shared_lib_elements.h"

#include "NatJsonObject.h"
#include "NattingTableJsonObject.h"
#include "RuleJsonObject.h"
#include "RuleDnatJsonObject.h"
#include "RuleDnatAppendInputJsonObject.h"
#include "RuleDnatAppendOutputJsonObject.h"
#include "RuleDnatEntryJsonObject.h"
#include "RuleMasqueradeJsonObject.h"
#include "RuleMasqueradeDisableOutputJsonObject.h"
#include "RuleMasqueradeEnableOutputJsonObject.h"
#include "RulePortForwardingJsonObject.h"
#include "RulePortForwardingAppendInputJsonObject.h"
#include "RulePortForwardingAppendOutputJsonObject.h"
#include "RulePortForwardingEntryJsonObject.h"
#include "RuleSnatJsonObject.h"
#include "RuleSnatAppendInputJsonObject.h"
#include "RuleSnatAppendOutputJsonObject.h"
#include "RuleSnatEntryJsonObject.h"
#include <vector>


#ifdef __cplusplus
extern "C" {
#endif

Response create_nat_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_nat_natting_table_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_nat_natting_table_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_nat_rule_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_nat_rule_dnat_append_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_nat_rule_dnat_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_nat_rule_dnat_entry_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_nat_rule_dnat_entry_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_nat_rule_masquerade_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_nat_rule_masquerade_disable_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response create_nat_rule_masquerade_enable_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response create_nat_rule_port_forwarding_append_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_nat_rule_port_forwarding_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_nat_rule_port_forwarding_entry_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_nat_rule_port_forwarding_entry_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_nat_rule_snat_append_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_nat_rule_snat_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_nat_rule_snat_entry_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_nat_rule_snat_entry_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response delete_nat_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_nat_natting_table_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_nat_natting_table_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_nat_rule_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_nat_rule_dnat_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_nat_rule_dnat_entry_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_nat_rule_dnat_entry_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_nat_rule_masquerade_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_nat_rule_port_forwarding_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_nat_rule_port_forwarding_entry_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_nat_rule_port_forwarding_entry_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_nat_rule_snat_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_nat_rule_snat_entry_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_nat_rule_snat_entry_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_nat_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_nat_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_nat_natting_table_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_nat_natting_table_external_ip_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_nat_natting_table_external_port_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_nat_natting_table_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_nat_natting_table_originating_rule_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_nat_rule_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_nat_rule_dnat_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_nat_rule_dnat_entry_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_nat_rule_dnat_entry_external_ip_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_nat_rule_dnat_entry_internal_ip_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_nat_rule_dnat_entry_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_nat_rule_masquerade_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_nat_rule_masquerade_enabled_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_nat_rule_port_forwarding_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_nat_rule_port_forwarding_entry_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_nat_rule_port_forwarding_entry_external_ip_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_nat_rule_port_forwarding_entry_external_port_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_nat_rule_port_forwarding_entry_internal_ip_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_nat_rule_port_forwarding_entry_internal_port_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_nat_rule_port_forwarding_entry_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_nat_rule_port_forwarding_entry_proto_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_nat_rule_snat_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_nat_rule_snat_entry_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_nat_rule_snat_entry_external_ip_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_nat_rule_snat_entry_internal_net_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_nat_rule_snat_entry_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response replace_nat_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_nat_natting_table_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_nat_natting_table_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_nat_rule_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_nat_rule_dnat_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_nat_rule_dnat_entry_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_nat_rule_dnat_entry_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_nat_rule_masquerade_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_nat_rule_port_forwarding_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_nat_rule_port_forwarding_entry_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_nat_rule_port_forwarding_entry_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_nat_rule_snat_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_nat_rule_snat_entry_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_nat_rule_snat_entry_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_nat_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_nat_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_nat_natting_table_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_nat_natting_table_external_ip_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_nat_natting_table_external_port_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_nat_natting_table_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_nat_natting_table_originating_rule_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_nat_rule_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_nat_rule_dnat_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_nat_rule_dnat_entry_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_nat_rule_dnat_entry_external_ip_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_nat_rule_dnat_entry_internal_ip_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_nat_rule_dnat_entry_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_nat_rule_masquerade_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_nat_rule_masquerade_enabled_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_nat_rule_port_forwarding_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_nat_rule_port_forwarding_entry_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_nat_rule_port_forwarding_entry_external_ip_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_nat_rule_port_forwarding_entry_external_port_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_nat_rule_port_forwarding_entry_internal_ip_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_nat_rule_port_forwarding_entry_internal_port_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_nat_rule_port_forwarding_entry_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_nat_rule_port_forwarding_entry_proto_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_nat_rule_snat_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_nat_rule_snat_entry_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_nat_rule_snat_entry_external_ip_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_nat_rule_snat_entry_internal_net_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_nat_rule_snat_entry_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);

Response nat_list_by_id_help(const char *name, const Key *keys, size_t num_keys);
Response nat_natting_table_list_by_id_help(const char *name, const Key *keys, size_t num_keys);
Response nat_rule_dnat_entry_list_by_id_help(const char *name, const Key *keys, size_t num_keys);
Response nat_rule_port_forwarding_entry_list_by_id_help(const char *name, const Key *keys, size_t num_keys);
Response nat_rule_snat_entry_list_by_id_help(const char *name, const Key *keys, size_t num_keys);


#ifdef __cplusplus
}
#endif

