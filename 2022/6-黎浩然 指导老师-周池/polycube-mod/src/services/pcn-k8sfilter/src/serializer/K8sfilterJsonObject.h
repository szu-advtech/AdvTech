/**
* k8sfilter API
* k8sfilter API generated from k8sfilter.yang
*
* OpenAPI spec version: 1.0.0
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/polycube-network/swagger-codegen.git
* branch polycube
*/


/* Do not edit this file manually */

/*
* K8sfilterJsonObject.h
*
*
*/

#pragma once


#include "JsonObjectBase.h"

#include "PortsJsonObject.h"
#include <vector>
#include "polycube/services/cube.h"

namespace io {
namespace swagger {
namespace server {
namespace model {


/// <summary>
///
/// </summary>
class  K8sfilterJsonObject : public JsonObjectBase {
public:
  K8sfilterJsonObject();
  K8sfilterJsonObject(const nlohmann::json &json);
  ~K8sfilterJsonObject() final = default;
  nlohmann::json toJson() const final;


  /// <summary>
  /// Name of the k8sfilter service
  /// </summary>
  std::string getName() const;
  void setName(std::string value);
  bool nameIsSet() const;

  /// <summary>
  /// Entry of the ports table
  /// </summary>
  const std::vector<PortsJsonObject>& getPorts() const;
  void addPorts(PortsJsonObject value);
  bool portsIsSet() const;
  void unsetPorts();

  /// <summary>
  /// Port range used for NodePort services
  /// </summary>
  std::string getNodeportRange() const;
  void setNodeportRange(std::string value);
  bool nodeportRangeIsSet() const;
  void unsetNodeportRange();

private:
  std::string m_name;
  bool m_nameIsSet;
  std::vector<PortsJsonObject> m_ports;
  bool m_portsIsSet;
  std::string m_nodeportRange;
  bool m_nodeportRangeIsSet;
};

}
}
}
}

