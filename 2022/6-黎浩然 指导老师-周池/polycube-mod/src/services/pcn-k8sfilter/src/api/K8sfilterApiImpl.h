/**
* k8sfilter API
* k8sfilter API generated from k8sfilter.yang
*
* OpenAPI spec version: 1.0.0
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/polycube-network/swagger-codegen.git
* branch polycube
*/


/* Do not edit this file manually */

/*
* K8sfilterApiImpl.h
*
*
*/

#pragma once


#include <memory>
#include <map>
#include <mutex>
#include "../K8sfilter.h"

#include "K8sfilterJsonObject.h"
#include "PortsJsonObject.h"
#include <vector>

namespace io {
namespace swagger {
namespace server {
namespace api {

using namespace io::swagger::server::model;

namespace K8sfilterApiImpl {
  void create_k8sfilter_by_id(const std::string &name, const K8sfilterJsonObject &value);
  void create_k8sfilter_ports_by_id(const std::string &name, const std::string &portsName, const PortsJsonObject &value);
  void create_k8sfilter_ports_list_by_id(const std::string &name, const std::vector<PortsJsonObject> &value);
  void delete_k8sfilter_by_id(const std::string &name);
  void delete_k8sfilter_ports_by_id(const std::string &name, const std::string &portsName);
  void delete_k8sfilter_ports_list_by_id(const std::string &name);
  K8sfilterJsonObject read_k8sfilter_by_id(const std::string &name);
  std::vector<K8sfilterJsonObject> read_k8sfilter_list_by_id();
  std::string read_k8sfilter_nodeport_range_by_id(const std::string &name);
  PortsJsonObject read_k8sfilter_ports_by_id(const std::string &name, const std::string &portsName);
  std::vector<PortsJsonObject> read_k8sfilter_ports_list_by_id(const std::string &name);
  PortsTypeEnum read_k8sfilter_ports_type_by_id(const std::string &name, const std::string &portsName);
  void replace_k8sfilter_by_id(const std::string &name, const K8sfilterJsonObject &value);
  void replace_k8sfilter_ports_by_id(const std::string &name, const std::string &portsName, const PortsJsonObject &value);
  void replace_k8sfilter_ports_list_by_id(const std::string &name, const std::vector<PortsJsonObject> &value);
  void update_k8sfilter_by_id(const std::string &name, const K8sfilterJsonObject &value);
  void update_k8sfilter_list_by_id(const std::vector<K8sfilterJsonObject> &value);
  void update_k8sfilter_nodeport_range_by_id(const std::string &name, const std::string &value);
  void update_k8sfilter_ports_by_id(const std::string &name, const std::string &portsName, const PortsJsonObject &value);
  void update_k8sfilter_ports_list_by_id(const std::string &name, const std::vector<PortsJsonObject> &value);

  /* help related */
  std::vector<nlohmann::fifo_map<std::string, std::string>> read_k8sfilter_list_by_id_get_list();
  std::vector<nlohmann::fifo_map<std::string, std::string>> read_k8sfilter_ports_list_by_id_get_list(const std::string &name);

}
}
}
}
}

