/**
* firewall API generated from firewall.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* SessionTableBase.h
*
*
*/

#pragma once

#include "../serializer/SessionTableJsonObject.h"

#include <spdlog/spdlog.h>

using namespace polycube::service::model;

class Firewall;

class SessionTableBase {
 public:

  SessionTableBase(Firewall &parent);

  virtual ~SessionTableBase();
  virtual void update(const SessionTableJsonObject &conf);
  virtual SessionTableJsonObject toJsonObject();

  /// <summary>
  /// Source IP
  /// </summary>
  virtual std::string getSrc() = 0;

  /// <summary>
  /// Destination IP
  /// </summary>
  virtual std::string getDst() = 0;

  /// <summary>
  /// Level 4 Protocol.
  /// </summary>
  virtual std::string getL4proto() = 0;

  /// <summary>
  /// Source Port
  /// </summary>
  virtual uint16_t getSport() = 0;

  /// <summary>
  /// Destination
  /// </summary>
  virtual uint16_t getDport() = 0;

  /// <summary>
  /// Connection state.
  /// </summary>
  virtual std::string getState() = 0;

  /// <summary>
  /// Last packet matching the connection
  /// </summary>
  virtual uint32_t getEta() = 0;

  std::shared_ptr<spdlog::logger> logger();
 protected:
  Firewall &parent_;
};
