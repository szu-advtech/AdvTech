/**
* simpleforwarder API generated from simpleforwarder.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* ActionsBase.h
*
*
*/

#pragma once

#include "../serializer/ActionsJsonObject.h"



#include <spdlog/spdlog.h>

using namespace polycube::service::model;

class Simpleforwarder;

class ActionsBase {
 public:
  
  ActionsBase(Simpleforwarder &parent);
  
  virtual ~ActionsBase();
  virtual void update(const ActionsJsonObject &conf);
  virtual ActionsJsonObject toJsonObject();

  /// <summary>
  /// Ingress port
  /// </summary>
  virtual std::string getInport() = 0;

  /// <summary>
  /// Action associated to the current table entry (i.e., DROP, SLOWPATH, or FORWARD; default: DROP)
  /// </summary>
  virtual ActionsActionEnum getAction() = 0;
  virtual void setAction(const ActionsActionEnum &value) = 0;

  /// <summary>
  /// Output port (used only when action is FORWARD)
  /// </summary>
  virtual std::string getOutport() = 0;
  virtual void setOutport(const std::string &value) = 0;

  std::shared_ptr<spdlog::logger> logger();
 protected:
  Simpleforwarder &parent_;
};
