/**
* simpleforwarder API generated from simpleforwarder.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* SimpleforwarderApi.h
*
*/

#pragma once

#define POLYCUBE_SERVICE_NAME "simpleforwarder"


#include "polycube/services/response.h"
#include "polycube/services/shared_lib_elements.h"

#include "ActionsJsonObject.h"
#include "PortsJsonObject.h"
#include "SimpleforwarderJsonObject.h"
#include <vector>


#ifdef __cplusplus
extern "C" {
#endif

Response create_simpleforwarder_actions_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_simpleforwarder_actions_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_simpleforwarder_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_simpleforwarder_ports_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_simpleforwarder_ports_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response delete_simpleforwarder_actions_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_simpleforwarder_actions_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_simpleforwarder_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_simpleforwarder_ports_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_simpleforwarder_ports_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_simpleforwarder_actions_action_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_simpleforwarder_actions_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_simpleforwarder_actions_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_simpleforwarder_actions_outport_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_simpleforwarder_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_simpleforwarder_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_simpleforwarder_ports_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_simpleforwarder_ports_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response replace_simpleforwarder_actions_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_simpleforwarder_actions_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_simpleforwarder_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_simpleforwarder_ports_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_simpleforwarder_ports_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_simpleforwarder_actions_action_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_simpleforwarder_actions_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_simpleforwarder_actions_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_simpleforwarder_actions_outport_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_simpleforwarder_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_simpleforwarder_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_simpleforwarder_ports_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_simpleforwarder_ports_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);

Response simpleforwarder_actions_list_by_id_help(const char *name, const Key *keys, size_t num_keys);
Response simpleforwarder_list_by_id_help(const char *name, const Key *keys, size_t num_keys);
Response simpleforwarder_ports_list_by_id_help(const char *name, const Key *keys, size_t num_keys);


#ifdef __cplusplus
}
#endif

