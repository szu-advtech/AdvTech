/**
* iptables API
* iptables API generated from iptables.yang
*
* OpenAPI spec version: 1.0.0
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/polycube-network/swagger-codegen.git
* branch polycube
*/


/* Do not edit this file manually */

/*
* ChainInterface.h
*
*
*/

#pragma once

#include "../serializer/ChainJsonObject.h"
#include "../serializer/ChainAppendOutputJsonObject.h"
#include "../serializer/ChainAppendInputJsonObject.h"
#include "../serializer/ChainInsertOutputJsonObject.h"
#include "../serializer/ChainInsertInputJsonObject.h"

#include "../serializer/ChainDeleteInputJsonObject.h"
#include "../serializer/ChainResetCountersOutputJsonObject.h"

#include "../serializer/ChainApplyRulesOutputJsonObject.h"


#include "../ChainRule.h"
#include "../ChainStats.h"

using namespace io::swagger::server::model;

class ChainInterface {
public:

  virtual void update(const ChainJsonObject &conf) = 0;
  virtual ChainJsonObject toJsonObject() = 0;

  /// <summary>
  /// Chain in which the rule will be inserted. Default: FORWARD.
  /// </summary>
  virtual ChainNameEnum getName() = 0;

  /// <summary>
  /// Default action if no rule matches in the ingress chain. Default is DROP.
  /// </summary>
  virtual ActionEnum getDefault() = 0;
  virtual void setDefault(const ActionEnum &value) = 0;

  /// <summary>
  ///
  /// </summary>
  virtual std::shared_ptr<ChainStats> getStats(const uint32_t &id) = 0;
  virtual std::vector<std::shared_ptr<ChainStats>> getStatsList() = 0;
  virtual void addStats(const uint32_t &id, const ChainStatsJsonObject &conf) = 0;
  virtual void addStatsList(const std::vector<ChainStatsJsonObject> &conf) = 0;
  virtual void replaceStats(const uint32_t &id, const ChainStatsJsonObject &conf) = 0;
  virtual void delStats(const uint32_t &id) = 0;
  virtual void delStatsList() = 0;

  /// <summary>
  ///
  /// </summary>
  virtual std::shared_ptr<ChainRule> getRule(const uint32_t &id) = 0;
  virtual std::vector<std::shared_ptr<ChainRule>> getRuleList() = 0;
  virtual void addRule(const uint32_t &id, const ChainRuleJsonObject &conf) = 0;
  virtual void addRuleList(const std::vector<ChainRuleJsonObject> &conf) = 0;
  virtual void replaceRule(const uint32_t &id, const ChainRuleJsonObject &conf) = 0;
  virtual void delRule(const uint32_t &id) = 0;
  virtual void delRuleList() = 0;
  virtual ChainAppendOutputJsonObject append(ChainAppendInputJsonObject input) = 0;
  virtual ChainInsertOutputJsonObject insert(ChainInsertInputJsonObject input) = 0;
  virtual void deletes(ChainDeleteInputJsonObject input) = 0;
  virtual ChainResetCountersOutputJsonObject resetCounters() = 0;
  virtual ChainApplyRulesOutputJsonObject applyRules() = 0;
};

