/**
* iptables API
* iptables API generated from iptables.yang
*
* OpenAPI spec version: 1.0.0
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/polycube-network/swagger-codegen.git
* branch polycube
*/


/* Do not edit this file manually */

/*
* IptablesApi.h
*
*/

#pragma once

#define POLYCUBE_SERVICE_NAME "iptables"


#include "polycube/services/response.h"
#include "polycube/services/shared_lib_elements.h"

#include "ChainJsonObject.h"
#include "ChainAppendInputJsonObject.h"
#include "ChainAppendOutputJsonObject.h"
#include "ChainApplyRulesOutputJsonObject.h"
#include "ChainDeleteInputJsonObject.h"
#include "ChainInsertInputJsonObject.h"
#include "ChainInsertOutputJsonObject.h"
#include "ChainResetCountersOutputJsonObject.h"
#include "ChainRuleJsonObject.h"
#include "ChainStatsJsonObject.h"
#include "IptablesJsonObject.h"
#include "PortsJsonObject.h"
#include "SessionTableJsonObject.h"
#include <vector>


#ifdef __cplusplus
extern "C" {
#endif

Response create_iptables_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_iptables_chain_append_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_iptables_chain_apply_rules_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response create_iptables_chain_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_iptables_chain_delete_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_iptables_chain_insert_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_iptables_chain_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_iptables_chain_reset_counters_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response create_iptables_chain_rule_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_iptables_chain_rule_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_iptables_ports_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_iptables_ports_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response delete_iptables_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_iptables_chain_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_iptables_chain_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_iptables_chain_rule_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_iptables_chain_rule_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_iptables_ports_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_iptables_ports_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_iptables_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_iptables_chain_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_iptables_chain_default_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_iptables_chain_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_iptables_chain_rule_action_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_iptables_chain_rule_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_iptables_chain_rule_conntrack_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_iptables_chain_rule_dport_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_iptables_chain_rule_dst_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_iptables_chain_rule_in_iface_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_iptables_chain_rule_l4proto_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_iptables_chain_rule_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_iptables_chain_rule_out_iface_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_iptables_chain_rule_sport_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_iptables_chain_rule_src_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_iptables_chain_rule_tcpflags_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_iptables_chain_stats_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_iptables_chain_stats_bytes_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_iptables_chain_stats_description_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_iptables_chain_stats_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_iptables_chain_stats_pkts_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_iptables_conntrack_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_iptables_horus_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_iptables_interactive_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_iptables_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_iptables_ports_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_iptables_ports_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_iptables_session_table_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_iptables_session_table_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_iptables_session_table_state_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response replace_iptables_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_iptables_chain_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_iptables_chain_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_iptables_chain_rule_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_iptables_chain_rule_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_iptables_ports_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_iptables_ports_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_iptables_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_iptables_chain_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_iptables_chain_default_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_iptables_chain_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_iptables_chain_rule_action_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_iptables_chain_rule_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_iptables_chain_rule_conntrack_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_iptables_chain_rule_dport_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_iptables_chain_rule_dst_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_iptables_chain_rule_in_iface_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_iptables_chain_rule_l4proto_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_iptables_chain_rule_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_iptables_chain_rule_out_iface_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_iptables_chain_rule_sport_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_iptables_chain_rule_src_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_iptables_chain_rule_tcpflags_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_iptables_conntrack_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_iptables_horus_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_iptables_interactive_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_iptables_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_iptables_ports_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_iptables_ports_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);

Response iptables_chain_list_by_id_help(const char *name, const Key *keys, size_t num_keys);
Response iptables_chain_rule_list_by_id_help(const char *name, const Key *keys, size_t num_keys);
Response iptables_chain_stats_list_by_id_help(const char *name, const Key *keys, size_t num_keys);
Response iptables_list_by_id_help(const char *name, const Key *keys, size_t num_keys);
Response iptables_ports_list_by_id_help(const char *name, const Key *keys, size_t num_keys);
Response iptables_session_table_list_by_id_help(const char *name, const Key *keys, size_t num_keys);


#ifdef __cplusplus
}
#endif

